// Mocks generated by Mockito 5.4.4 from annotations
// in shared_preference_sample/test/data/repositories/key_value_repository/provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preference_sample/data/repositories/key_value_repository/repository.dart'
    as _i2;
import 'package:shared_preference_sample/domains/custom_setting.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [KeyValueRepositoryBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeyValueRepositoryBase extends _i1.Mock
    implements _i2.KeyValueRepositoryBase {
  @override
  _i3.Stream<String> get onValueChange => (super.noSuchMethod(
        Invocation.getter(#onValueChange),
        returnValue: _i3.Stream<String>.empty(),
        returnValueForMissingStub: _i3.Stream<String>.empty(),
      ) as _i3.Stream<String>);

  @override
  _i3.Future<bool?> getIconSetting() => (super.noSuchMethod(
        Invocation.method(
          #getIconSetting,
          [],
        ),
        returnValue: _i3.Future<bool?>.value(),
        returnValueForMissingStub: _i3.Future<bool?>.value(),
      ) as _i3.Future<bool?>);

  @override
  _i3.Future<void> setIconSetting({bool? value}) => (super.noSuchMethod(
        Invocation.method(
          #setIconSetting,
          [],
          {#value: value},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int?> getBackgroundColorNumber() => (super.noSuchMethod(
        Invocation.method(
          #getBackgroundColorNumber,
          [],
        ),
        returnValue: _i3.Future<int?>.value(),
        returnValueForMissingStub: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);

  @override
  _i3.Future<void> setBackgroundColorNumber(int? value) => (super.noSuchMethod(
        Invocation.method(
          #setBackgroundColorNumber,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getTileText() => (super.noSuchMethod(
        Invocation.method(
          #getTileText,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> setTitleText(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setTitleText,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.CustomSetting?> getCustomSetting() => (super.noSuchMethod(
        Invocation.method(
          #getCustomSetting,
          [],
        ),
        returnValue: _i3.Future<_i4.CustomSetting?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.CustomSetting?>.value(),
      ) as _i3.Future<_i4.CustomSetting?>);

  @override
  _i3.Future<void> setCustomSetting(_i4.CustomSetting? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCustomSetting,
          [value],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> initData() => (super.noSuchMethod(
        Invocation.method(
          #initData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
